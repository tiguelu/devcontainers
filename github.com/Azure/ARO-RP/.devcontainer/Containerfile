FROM registry.fedoraproject.org/fedora:34

RUN rpm --import https://packages.microsoft.com/keys/microsoft.asc \
    && echo -e "[azure-cli]\nname=Azure CLI\nbaseurl=https://packages.microsoft.com/yumrepos/azure-cli\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/azure-cli.repo \
    && dnf -y update \
    && dnf -y install go python-setuptools python-virtualenv gpgme-devel libassuan-devel openssl openvpn \
    && dnf -y install azure-cli \
    && dnf -y install iputils procps-ng jq pip

ARG RPDIR=/ARO-RP
ARG USERNAME=overriden-in-devcontainer-json
ARG USER_UID=1000
ARG USER_GID=$USER_UID
ARG HOMEDIR=/home/$USERNAME
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME

# Uncomment these lines to get passwordless sudo inside the container
# RUN echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
# && chmod 0440 /etc/sudoers.d/$USERNAME

USER $USERNAME
WORKDIR $HOMEDIR

# Tools used by the Go extension in VSCode
RUN go get -v github.com/ramya-rao-a/go-outline \
    && go get -v golang.org/x/tools/gopls \
    && go get -v github.com/uudashr/gopkgs/v2/cmd/gopkgs \
    && go get -v github.com/go-delve/delve/cmd/dlv \
    && go get -v honnef.co/go/tools/cmd/staticcheck \
    && mkdir -p $HOMEDIR/tmp/dap \
    && cd $HOMEDIR/tmp/dap \
    && go mod init local/build \
    && go get -v -d github.com/go-delve/delve/cmd/dlv@master \
    && go build -o $HOMEDIR/go/bin/dlv-dap github.com/go-delve/delve/cmd/dlv \
    && cd $HOMEDIR \
    && rm -rf $HOMEDIR/tmp/dap

# $USER is required by RP env files but it is not set in non-login sessions (e.g. when -l is not specified when podman exec bash)
# Explicitly setting it here to avoid failures with RP in non-login sessions
ENV USER $USERNAME
# $RPDIR will be used in .bashrc
ENV RPDIR $RPDIR

COPY .devcontainer/bash_* $HOMEDIR/tmp/
RUN cat $HOMEDIR/tmp/bash_* >> $HOMEDIR/.bashrc \
    # Installs oc and kubectl for the remote user
    && mkdir -p $HOMEDIR/.local/bin \
    && curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz | tar -C $HOMEDIR/.local/bin -zxf - \
    # This installs jsonlint in user space (useful to standardize jsons for jq consumption)
    && pip install --user demjson

COPY .devcontainer/tasks.json $HOMEDIR/tmp/
RUN mkdir -p $HOMEDIR/.vscode-server/data/Machine/ \
    && cp $HOMEDIR/tmp/tasks.json $HOMEDIR/.vscode-server/data/Machine/ \
    && rm -rf $HOMEDIR/tmp

